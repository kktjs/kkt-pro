{"version":3,"file":"static/js/303.e95e32fd.chunk.js","mappings":"+GACA,WACIA,WAAY,CAAG,EACfC,KAAM,CAAC,EACPC,OAAQ,qjG","sources":["pages/directory-structure/README.md"],"sourcesContent":["\nexport default {\n    components: {  },\n    data: {},\n    source: \"## 目录结构\\n\\n这里罗列了 `kktp` 项目中约定(或推荐)的目录结构，在项目开发中，请遵照这个目录结构组织代码\\n\\n```bash\\n.\\n├── README.md\\n├── build           # 编译后生成的目录\\n├── config\\n│   └── outes.json  # 【约定】路由文件\\n├── mocker\\n│   ├── index.js    # 【约定】mock API 入口目录\\n│   ├── login.js\\n│   └── page.js\\n├── package.json\\n├── .kktprc.js      # 可选，配置文件，包含内置功能\\n├── public\\n│   ├── favicon.ico\\n│   ├── index.html\\n│   └── robots.txt\\n└── src\\n    ├── .kktp            # 自动生成内容, 可通过配置自定义生成\\n    ├── components\\n    ├── global.css       # 【约定】全局样式文件, 文件存在则会加载到全局入口处\\n    ├── pages            # 页面入口文件\\n    ├── access.js        # 【约定】开启 access 配置 自动生成的文件\\n    └── services\\n```\\n\\n## 根目录\\n\\n### .kktprc.js\\n\\n可选，配置文件，包含内置功能\\n\\n```bash\\n├── .kktprc.js       # 可选，配置文件，包含内置功能\\n└── src\\n```\\n\\n### build 目录\\n\\n执行 `kktp build` 后，产物默认会存放在这里\\n\\n```bash\\n├── build           # 编译后生成的目录\\n└── src\\n```\\n\\n### mocker 目录\\n\\n存储 `mocker` 文件，此目录下所有 `js` 文件会被解析为 `mocker` 入口文件。用于本地的模拟数据服务。\\n\\n```bash\\n├── mocker\\n│   └── index.js    # 【约定】mock API 入口目录\\n└── src\\n```\\n\\n### public 目录\\n\\n此目录下所有文件会被 `copy` 到输出路径\\n\\n```bash\\n├── public\\n└── src\\n```\\n\\n### Contributors\\n\\n<a href=\\\"https://github.com/kktjs/kkt-pro/graphs/contributors\\\">\\n  <img src=\\\"https://kktjs.github.io/kkt-pro/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n### License\\n\\nLicensed under the MIT License.\"\n  }"],"names":["components","data","source"],"sourceRoot":""}