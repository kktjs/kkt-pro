{"version":3,"file":"static/js/258.7bda2419.chunk.js","mappings":"+GACA,WACIA,WAAY,CAAG,EACfC,KAAM,CAAC,EACPC,OAAQ,s0D","sources":["../../packages/plugin/rematch/README.md"],"sourcesContent":["\nexport default {\n    components: {  },\n    data: {},\n    source: \"## 状态管理\\n\\n`kktp`内置插件,是以`@rematch/core`包为基础进行自动收集状态管理。使用此插件需要安装`@rematch/core`和`@rematch/loading`包。\\n\\n## 参数\\n\\n```ts\\nexport interface ModelspluginProps {\\n  /**自动生成文件目录名称*/\\n  cacheDirName?: string;\\n}\\n```\\n\\n## models ts 实例\\n\\n```ts\\n// src/models/demo.ts\\nexport interface DemoState {\\n  test?: string;\\n}\\n\\nconst demo = {\\n  name: 'demo',\\n  state: {\\n    test: '测试State',\\n  },\\n  reducers: {\\n    updateState: (state: DemoState, payload: DemoState): DemoState => ({\\n      ...state,\\n      ...payload,\\n    }),\\n  },\\n  effects: (dispatch) => {\\n    const { demo } = dispatch;\\n    return {\\n      async verify() {\\n        demo.updateState({ test: '测试22' });\\n      },\\n    }\\n  },\\n};\\nexport default demo;\\n\\n\\n// src/pages/ceshi.tsx\\nimport { RootState, useSelector, dispatch } from '@kkt/pro';\\nconst Ceshi = () => {\\n  // 获取demo数据\\n  const store = useSelector((store: RootState) => store.demo);\\n  // Dispatch\\n  const dispatch = useDispatch<Dispatch>();\\n\\n  const click = () => {\\n    dispatch({\\n      type: 'demo/verify',\\n      payload: {}\\n    })\\n  }\\n  return <div />\\n}\\nexport default Ceshi;\\n```\\n\\n## 自动收集文件引入\\n\\n1. 约定`src/**/models/**/*.(js|ts)`文件\\n\\n## `kktp`配置文件\\n\\n```ts\\n// .kktprc.ts\\nexport default {\\n  // ...\\n  initModel:true,\\n}\\n```\\n\\n### Contributors\\n\\n<a href=\\\"https://github.com/kktjs/kkt-pro/graphs/contributors\\\">\\n  <img src=\\\"https://kktjs.github.io/kkt-pro/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n### License\\n\\nLicensed under the MIT License.\"\n  }"],"names":["components","data","source"],"sourceRoot":""}