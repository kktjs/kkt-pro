"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[496],{78496:function(e,n,t){t.r(n),n.default={components:{},data:{},source:"API \u8bf7\u6c42\n===\n\n`kktprc` \u914d\u7f6e `queryClient`\u5f00\u542f\u3002 `@kkt/request` \u5185\u7f6e\u4e86 `react-query`\uff08\u548c [`@tanstack/react-query`](https://npmjs.com/@tanstack/react-query)\x3c!--rehype:target=__blank--\x3e \u662f\u540c\u4e00\u4e2a\uff09\u8bf7\u6c42\u65b9\u6848\u3002\u66f4\u591a API \u65b9\u6cd5\u8bf7\u67e5\u770b [react-query \u5b98\u65b9\u6587\u6863](https://tanstack.com/query/latest)\u3002\n\n## `kktp`\u914d\u7f6e\u6587\u4ef6\n\n```ts\n// .kktprc.ts\nexport default {\n  queryClient: true\n}\n```\n\n\n```js\nimport { useReactQuery, useReactMutation, queryClient, fetchFn } from '@kkt/request';\n// OR\nimport { useReactQuery, useReactMutation, queryClient, fetchFn } from '@kkt/pro';\n```\n\n## API \u6bd4\u8f83\u8bf4\u660e\n\n &nbsp; | `useReactQuery` | ~~`useQuery`~~ |  `useReactMutation` | ~~`useMutation`~~\n:--- | :--- | :--- | :--- | :---\n\u8bf4\u660e | \u57fa\u4e8e `useQuery` \u5c01\u88c5 | \u5b98\u65b9 API | \u57fa\u4e8e `useMutation` \u5c01\u88c5 | \u5b98\u65b9 API\n\u62fc\u63a5\u524d\u7f00 | \u2705 | \ud83d\uded1 | \u2705 | \ud83d\uded1\n\u96c6\u6210 fetch \u51fd\u6570 | \u2705 | \ud83d\uded1 | \u2705 | \ud83d\uded1\n\u6dfb\u52a0\u5934\u4fe1\u606f | \u2705 | \ud83d\uded1 | \u2705 | \ud83d\uded1\nmethod | \u2705 \u9ed8\u8ba4(GET) | \ud83d\uded1 | \u2705 \u9ed8\u8ba4(POST) | \ud83d\uded1\n\u8bf7\u6c42\u81ea\u52a8\u5e26 token | \u2705 | \ud83d\uded1 | \u2705 | \ud83d\uded1\n\u81ea\u52a8\u66f4\u65b0 token | \u2705 | \ud83d\uded1 | \u2705 | \ud83d\uded1\nBody \u81ea\u52a8\u8f6c\u6362 | \u2705 | \ud83d\uded1 | \u2705 | \ud83d\uded1\n\n\u63a8\u8350\u4f7f\u7528\u6211\u4eec\u4e8c\u6b21\u5c01\u5305\u7684 API\uff0c\u5426\u5219\u60a8\u9700\u8981\u96c6\u6210\u4e0a\u8ff0\u529f\u80fd\n\n- [ ] \u8bf7\u6c42\u81ea\u52a8\u5e26 token\n- [ ] \u81ea\u52a8\u66f4\u65b0 token\n\n## API \u8bf7\u6c42 hooks\n\n\u4e0b\u9762\u662f API \u8bf7\u6c42\u793a\u4f8b\uff0c\u5982 GET/POST \u8bf7\u6c42\u793a\u4f8b\n\n### useReactQuery\n\n\u4e3b\u8981\u7528\u4e8e**\u9ed8\u8ba4**\u89e6\u53d1\u8bf7\u6c42\u6570\u636e\uff0c\u9ed8\u8ba4 `GET` \u8bf7\u6c42\uff0c\u53d8\u66f4\u4f7f\u7528 `method=\"POST\"` \u53c2\u6570\u914d\u7f6e\n\n```jsx\nuseReactQuery({ \n  queryKey: ['user', userId], \n  url: `/api/user/list?id=${userId}`\n});\n```\n\x3c!--rehype:style=background:#00de2247;border: 0;--\x3e\n\n\ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46 \u4e0a\u9762\u662f**\u63a8\u8350**\u4f7f\u7528 \ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46\n\n```jsx\nimport { fetchFn, useReactQuery } from '@kkt/request';\n\nuseReactQuery({ queryKey: ['user'], url: '/api/user/list' });\nuseReactQuery({ queryKey: ['user'], url: '/api/user/list', method: 'POST' });\nuseReactQuery({ queryKey: ['user', userId], queryFn: () => fetchFn(`/api/user/list?id=${userId}`) });\nuseReactQuery({\n  queryKey: ['user', userId],\n  queryFn: async () => {\n    return fetchFn(`/api/user/list?id=${userId}`);\n  },\n});\nuseReactQuery({\n  queryKey: ['user', userId],\n  queryFn: ({ queryKey }) => fetchFn(`/api/user/list?id=${queryKey[1]}`);,\n});\nuseReactQuery({\n  queryKey: ['user'],\n  url: '/api/user/list',\n  initialData: [....],\n});\n\nconst { isInitialLoading, isError, data, error, refetch, isFetching } = useQuery(...)\n```\n\n\u793a\u4f8b\n\n```javascript\nimport { useReactQuery } from '@kkt/request';\n\nexport default function HomePage() {\n  const { isLoading, isError, data } = useReactQuery({\n    url: `/api/user/list`,\n    queryKey: ['user-list'],\n  });\n\n  return (\n    <div>\n      <p className=\"title\"> react-query</p>\n      {isError && <p>\u8bf7\u6c42 API \u9519\u8bef ...</p>}\n      {isLoading && <p>Loading ...</p>}\n      {data && <p>\u73b0\u5728\u6709 {data.stargazers_count} \u9897\u661f\uff01</p>}\n    </div>\n  );\n}\n```\n\n#### Query \u9009\u9879\n\n\u53ef\u9009\u9009\u9879\uff0c\u8bf7\u6c42\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\u7b49\u5176\u5b83\u5e38\u7528[\u9009\u9879](https://tanstack.com/query/v4/docs/react/reference/useQuery)\uff0c\u53ef\u4ee5\u7528\u4e8e\u9ed8\u8ba4\u5168\u5c40\u914d\u7f6e `QueryClientConfig` \u7684\u8bbe\u7f6e\u3002\n\n```js\nconst { data } = useReactQuery({\n  /** \u8bbe\u7f6e Content-Type\uff0c\u9ed8\u8ba4\u503c `json`\uff0c'Content-Type' = 'application/json' */\n  contentType: \"json\" | 'form',\n  // \u8bf7\u6c42 API\n  url: '/api/user/list',\n  // \u8bbe\u7f6eheader\u91cc\u9762 token\u540d\u79f0\uff0c\u9ed8\u8ba4 x-auth\n  headerTokenName: 'x-auth',\n  // \u7528\u4e8e\u6b64\u67e5\u8be2\u7684\u67e5\u8be2\u952e\u3002\u67e5\u8be2\u952e\u5c06\u88ab hash \u6210\u4e00\u4e2a\u7a33\u5b9a\u7684 hash \u3002\u5f53\u6b64\u952e\u66f4\u6539\u65f6\uff0c\u67e5\u8be2\u5c06\u81ea\u52a8\u66f4\u65b0\uff08\u53ea\u8981 enabled \u672a\u8bbe\u7f6e\u4e3a false\uff09\n  queryKey: ['user-list', userId],\n  // \u53ea\u8981\u67e5\u8be2\u6210\u529f\u83b7\u53d6\u65b0\u6570\u636e\uff0c\u6b64\u51fd\u6570\u5c31\u4f1a\u89e6\u53d1\u3002\n  onSuccess: (data: TData) => void\n  // \u5982\u679c\u67e5\u8be2\u9047\u5230\u9519\u8bef\u5e76\u5c06\u4f20\u9012\u9519\u8bef\uff0c\u5219\u6b64\u51fd\u6570\u5c06\u89e6\u53d1\u3002\n  onError: (error: TError) => void\n  // \u6bcf\u5f53\u6210\u529f\u83b7\u53d6\u67e5\u8be2\u6216\u51fa\u9519\u5e76\u4f20\u9012\u6570\u636e\u6216\u9519\u8bef\u65f6\uff0c\u6b64\u51fd\u6570\u90fd\u4f1a\u89e6\u53d1\u3002\n  onSettled: (data?: TData, error?: TError) => void\n  // \u6b64\u9009\u9879\u53ef\u7528\u4e8e\u8f6c\u6362\u6216\u9009\u62e9\u67e5\u8be2\u51fd\u6570\u8fd4\u56de\u7684\u90e8\u5206\u6570\u636e\u3002 \u5b83\u4f1a\u5f71\u54cd\u8fd4\u56de\u7684\u6570\u636e\u503c\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u5b58\u50a8\u5728\u67e5\u8be2\u7f13\u5b58\u4e2d\u7684\u5185\u5bb9\u3002\n  select: (data: TData) => unknown\n  select: (dt) => {\n    // \u6539\u53d8\u8bf7\u6c42\u5230\u7684 data \u6570\u636e\uff0c\u8fd4\u56de\u90e8\u5206 data \u6570\u636e\n    return dt\n  },\n  // \u5c06\u6b64\u8bbe\u7f6e\u4e3a true \u4ee5\u542f\u7528\u6682\u505c\u6a21\u5f0f\u3002\n  // \u5f53 true \u65f6\uff0cuseQuery \u5c06\u5728 status === 'loading' \u65f6\u6682\u505c\n  // \u5f53 true \u65f6\uff0cuseQuery \u5c06\u5728 status === 'error' \u65f6\u629b\u51fa\u8fd0\u884c\u65f6\u9519\u8bef\n  suspense: true,\n  // \u5c06\u6b64\u8bbe\u7f6e\u4e3a false \u4ee5\u7981\u6b62\u6b64\u67e5\u8be2\u81ea\u52a8\u8fd0\u884c\u3002https://tanstack.com/query/v4/docs/react/guides/dependent-queries\n  // \u5728 userId \u5b58\u5728\u4e4b\u524d\uff0c\u67e5\u8be2\u4e0d\u4f1a\u6267\u884c\n  enabled: !!userId,\n  // \u5982\u679c\u4e3a false\uff0c\u5931\u8d25\u7684\u67e5\u8be2\u9ed8\u8ba4\u4e0d\u4f1a\u91cd\u8bd5\u3002\u5982\u679c\u4e3a\u771f\uff0c\u5931\u8d25\u7684\u67e5\u8be2\u5c06\u65e0\u9650\u91cd\u8bd5\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u6570\u5b57\uff0c\u4f8b\u5982 3\u3001\u5931\u8d25\u7684\u67e5\u8be2\u4f1a\u91cd\u8bd5\uff0c\u76f4\u5230\u5931\u8d25\u7684\u67e5\u8be2\u8ba1\u6570\u6ee1\u8db3\u90a3\u4e2a\u6570\n  retry: boolean | number | (failureCount: number, error: TError) => boolean\n  // \u9ed8\u8ba4\u503c\u4e3a 'online'\uff0c\u8bf7\u53c2\u9605\u7f51\u7edc\u6a21\u5f0f\uff1ahttps://tanstack.com/query/v4/docs/react/guides/network-mode\n  networkMode: 'online' | 'always' | 'offlineFirst'\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u5982\u679c\u67e5\u8be2\u5305\u542b\u9519\u8bef\uff0c\u5219\u4e0d\u4f1a\u5728\u6302\u8f7d\u65f6\u91cd\u8bd5\u3002\u9ed8\u8ba4\u4e3a\u771f\n  retryOnMount: boolean\n  // \u6b64\u51fd\u6570\u63a5\u6536\u4e00\u4e2a retryAttempt \u6574\u6570\u548c\u5b9e\u9645\u9519\u8bef\uff0c\u5e76\u8fd4\u56de\u5728\u4e0b\u4e00\u6b21\u5c1d\u8bd5\u4e4b\u524d\u5e94\u7528\u7684\u5ef6\u8fdf\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\n  // \u50cf attempt => Math.min(attempt > 1 ? 2 ** attempt * 1000 : 1000, 30 * 1000) \u8fd9\u6837\u7684\u51fd\u6570\u5e94\u7528\u6307\u6570\u9000\u907f\n  // \u50cf attempt => attempt * 1000 \u8fd9\u6837\u7684\u51fd\u6570\u5e94\u7528\u7ebf\u6027\u9000\u907f\u3002\n  retryDelay: number | (retryAttempt: number, error: TError) => number\n  // \u9ed8\u8ba4\u503c\u4e3a 0\uff0c\u6570\u636e\u88ab\u8ba4\u4e3a\u8fc7\u65f6\u540e\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u8be5\u503c\u4ec5\u9002\u7528\u4e8e\u5b9a\u4e49\u5b83\u7684\u6302\u94a9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u201cInfinity\u201d\uff0c\u6570\u636e\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u9648\u65e7\u7684\n  staleTime: number | Infinity\n  // \u5728 SSR \u671f\u95f4\u9ed8\u8ba4\u4e3a 5 * 60 * 1000\uff085 \u5206\u949f\uff09\u6216\u65e0\u9650\n  // \u672a\u4f7f\u7528(unused)/\u975e\u6d3b\u52a8(inactive)\u7f13\u5b58\u6570\u636e\u4fdd\u7559\u5728\u5185\u5b58\u4e2d\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u5f53\u67e5\u8be2\u7684\u7f13\u5b58\u53d8\u4e3a\u672a\u4f7f\u7528\u6216\u4e0d\u6d3b\u52a8\u65f6\uff0c\u8be5\u7f13\u5b58\u6570\u636e\u5c06\u5728\u8fd9\u6bb5\u65f6\u95f4\u540e\u88ab\u5783\u573e\u6536\u96c6\u3002 \u5f53\u6307\u5b9a\u4e0d\u540c\u7684\u7f13\u5b58\u65f6\u95f4\u65f6\uff0c\u5c06\u4f7f\u7528\u6700\u957f\u7684\u4e00\u4e2a\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a Infinity\uff0c\u5c06\u7981\u7528\u5783\u573e\u6536\u96c6\n  cacheTime: number | Infinity\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u6240\u6709\u67e5\u8be2\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u4ee5\u8be5\u9891\u7387\u8fde\u7eed\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4f7f\u7528\u6700\u65b0\u7684\u6570\u636e\u6267\u884c\u5e76\u67e5\u8be2\u4ee5\u8ba1\u7b97\u9891\u7387\n  refetchInterval: number | false | ((data: TData | undefined, query: Query) => number | false)\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5219\u8bbe\u7f6e\u4e3a\u4f7f\u7528 refetchInterval \u8fde\u7eed\u91cd\u65b0\u83b7\u53d6\u7684\u67e5\u8be2\u5c06\u5728\u5176\u9009\u9879\u5361/\u7a97\u53e3\u5904\u4e8e\u540e\u53f0\u65f6\u7ee7\u7eed\u91cd\u65b0\u83b7\u53d6\n  refetchIntervalInBackground: boolean\n  // \u9ed8\u8ba4\u4e3a true\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5982\u679c\u6570\u636e\u8fc7\u65f6\uff0c\u67e5\u8be2\u5c06\u5728\u6302\u8f7d\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u67e5\u8be2\u5c06\u4e0d\u4f1a\u5728\u6302\u8f7d\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a always\uff0c\u67e5\u8be2\u5c06\u59cb\u7ec8\u5728\u6302\u8f7d\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e0e\u67e5\u8be2\u4e00\u8d77\u6267\u884c\u4ee5\u8ba1\u7b97\u503c\n  refetchOnMount: boolean | \"always\" | ((query: Query) => boolean | \"always\")\n  // \u9ed8\u8ba4\u4e3a true\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5982\u679c\u6570\u636e\u9648\u65e7\uff0c\u67e5\u8be2\u5c06\u91cd\u65b0\u83b7\u53d6\u7a97\u53e3\u7126\u70b9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u67e5\u8be2\u5c06\u4e0d\u4f1a\u91cd\u65b0\u83b7\u53d6\u7a97\u53e3\u7126\u70b9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a always\uff0c\u67e5\u8be2\u5c06\u59cb\u7ec8\u91cd\u65b0\u83b7\u53d6\u7a97\u53e3\u7126\u70b9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e0e\u67e5\u8be2\u4e00\u8d77\u6267\u884c\u4ee5\u8ba1\u7b97\u503c\n  refetchOnWindowFocus: boolean | \"always\" | ((query: Query) => boolean | \"always\")\n  // \u9ed8\u8ba4\u4e3a true\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5982\u679c\u6570\u636e\u8fc7\u65f6\uff0c\u67e5\u8be2\u5c06\u5728\u91cd\u65b0\u8fde\u63a5\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u67e5\u8be2\u5c06\u4e0d\u4f1a\u5728\u91cd\u65b0\u8fde\u63a5\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a always\uff0c\u67e5\u8be2\u5c06\u59cb\u7ec8\u91cd\u65b0\u83b7\u53d6\u7a97\u53e3\u7126\u70b9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e0e\u67e5\u8be2\u4e00\u8d77\u6267\u884c\u4ee5\u8ba1\u7b97\u503c\n  refetchOnReconnect: boolean | \"always\" | ((query: Query) => boolean | \"always\")\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u7ec4\u4ef6\u5c06\u4ec5\u5728\u4efb\u4f55\u5217\u51fa\u7684\u5c5e\u6027\u66f4\u6539\u65f6\u91cd\u65b0\u6e32\u67d3\n  // \u4f8b\u5982\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a ['data', 'error']\uff0c\u7ec4\u4ef6\u5c06\u4ec5\u5728\u6570\u636e\u6216\u9519\u8bef\u5c5e\u6027\u66f4\u6539\u65f6\u91cd\u65b0\u5448\u73b0\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u201call\u201d\uff0c\u7ec4\u4ef6\u5c06\u9009\u62e9\u9000\u51fa\u667a\u80fd\u8ddf\u8e2a\u5e76\u5728\u66f4\u65b0\u67e5\u8be2\u65f6\u91cd\u65b0\u5448\u73b0\n  // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c06\u8ddf\u8e2a\u5bf9\u5c5e\u6027\u7684\u8bbf\u95ee\uff0c\u5e76\u4e14\u4ec5\u5f53\u8ddf\u8e2a\u7684\u5c5e\u6027\u4e4b\u4e00\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u7ec4\u4ef6\u624d\u4f1a\u91cd\u65b0\u5448\u73b0\n  notifyOnChangeProps: string[] | \"all\"\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u6b64\u503c\u5c06\u7528\u4f5c\u67e5\u8be2\u7f13\u5b58\u7684\u521d\u59cb\u6570\u636e\uff08\u53ea\u8981\u5c1a\u672a\u521b\u5efa\u6216\u7f13\u5b58\u67e5\u8be2\uff09\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u5728\u5171\u4eab/\u6839\u67e5\u8be2\u521d\u59cb\u5316\u671f\u95f4\u88ab\u8c03\u7528\u4e00\u6b21\uff0c\u5e76\u671f\u671b\u540c\u6b65\u8fd4\u56de initialData\n  // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u521d\u59cb\u6570\u636e\u88ab\u8ba4\u4e3a\u662f\u9648\u65e7\u7684\uff0c\u9664\u975e\u8bbe\u7f6e\u4e86 staleTime\u3002\n  // initialData \u88ab\u6301\u4e45\u5316\u5230\u7f13\u5b58\n  initialData: TData | () => TData\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u8be5\u503c\u5c06\u7528\u4f5c\u4e0a\u6b21\u66f4\u65b0 initialData \u672c\u8eab\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\n  initialDataUpdatedAt: number | (() => number | undefined)\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u5f53\u67e5\u8be2\u4ecd\u5728\u52a0\u8f7d\u6570\u636e\u4e2d\u4e14\u672a\u63d0\u4f9b initialData \u65f6\uff0c\u6b64\u503c\u5c06\u7528\u4f5c\u6b64\u7279\u5b9a\u67e5\u8be2\u89c2\u5bdf\u5668\u7684\u5360\u4f4d\u7b26\u6570\u636e\u3002\n  // `placeholderData` \u4e0d\u4f1a\u6301\u4e45\u5316\u5230\u7f13\u5b58\n  placeholderData: TData | () => TData\n  // \u9ed8\u8ba4\u4e3a false \u5982\u679c\u8bbe\u7f6e\uff0c\u5219\u5728\u83b7\u53d6\u65b0\u6570\u636e\u65f6\u5c06\u4fdd\u7559\u4efb\u4f55\u4ee5\u524d\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u67e5\u8be2\u952e\u5df2\u66f4\u6539\u3002\n  keepPreviousData: boolean\n  // \u9ed8\u8ba4\u4e3a true \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u5c06\u7981\u7528\u67e5\u8be2\u7ed3\u679c\u4e4b\u95f4\u7684\u7ed3\u6784\u5171\u4eab\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u65e7\u6570\u636e\u503c\u548c\u65b0\u6570\u636e\u503c\u5c06\u901a\u8fc7\u8be5\u51fd\u6570\u4f20\u9012\uff0c\u8be5\u51fd\u6570\u5e94\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u89e3\u6790\u6570\u636e\u4ee5\u4f9b\u67e5\u8be2\u3002 \u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u4fdd\u7559\u65e7\u6570\u636e\u7684\u5f15\u7528\u4ee5\u63d0\u9ad8\u6027\u80fd\uff0c\u5373\u4f7f\u8be5\u6570\u636e\u5305\u542b\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u503c\u4e5f\u662f\u5982\u6b64\n  structuralSharing: boolean | ((oldData: TData | undefined, newData: TData) => TData)\n  // \u9ed8\u8ba4\u4e3a\u5168\u5c40\u67e5\u8be2\u914d\u7f6e\u7684 useErrorBoundary \u503c\uff0c\u672a\u5b9a\u4e49\n  // \u5982\u679c\u60a8\u5e0c\u671b\u5728\u6e32\u67d3\u9636\u6bb5\u629b\u51fa\u9519\u8bef\u5e76\u4f20\u64ad\u5230\u6700\u8fd1\u7684\u9519\u8bef\u8fb9\u754c\uff0c\u8bf7\u5c06\u6b64\u8bbe\u7f6e\u4e3a true\n  // \u5c06\u6b64\u8bbe\u7f6e\u4e3a false \u4ee5\u7981\u7528 suspense \u5c06\u9519\u8bef\u629b\u51fa\u5230\u9519\u8bef\u8fb9\u754c\u7684\u9ed8\u8ba4\u884c\u4e3a\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u51fd\u6570\uff0c\u5b83\u5c06\u4f20\u9012\u9519\u8bef\u548c\u67e5\u8be2\uff0c\u5b83\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u6307\u793a\u662f\u5728\u9519\u8bef\u8fb9\u754c\u4e2d\u663e\u793a\u9519\u8bef (true) \u8fd8\u662f\u5c06\u9519\u8bef\u4f5c\u4e3a\u72b6\u6001\u8fd4\u56de (false)\n  useErrorBoundary: undefined | boolean | (error: TError, query: Query) => boolean\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u5219\u5b58\u50a8\u6709\u5173\u67e5\u8be2\u7f13\u5b58\u6761\u76ee\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u53ef\u6839\u636e\u9700\u8981\u4f7f\u7528\u3002 \u53ea\u8981\u67e5\u8be2\u53ef\u7528\uff0c\u5b83\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5b83\u4e5f\u662f\u63d0\u4f9b\u7ed9 queryFn \u7684 QueryFunctionContext \u7684\u4e00\u90e8\u5206\n  meta: Record<string, unknown>\n  // \u4f7f\u7528\u5b83\u6765\u4f7f\u7528\u81ea\u5b9a\u4e49 React \u67e5\u8be2\u4e0a\u4e0b\u6587\u3002 \u5426\u5219\uff0c\u5c06\u4f7f\u7528 defaultContext\n  context: React.Context<QueryClient | undefined>\n});\n```\n\n\n### useReactMutation\n\n\u7528\u4e8e\u89e6\u53d1\u7684 `API` \u8bf7\u6c42\n\n```jsx\nuseReactMutation({\n  mutationKey: ['user', dataForm],\n  url: '/api/login'\n});\n```\n\x3c!--rehype:style=background:#00de2247;border: 0;--\x3e\n\n\ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46 \u4e0a\u9762\u662f**\u63a8\u8350**\u4f7f\u7528\uff0c**dataForm** \u7528\u4e8e\u7ed9 `body` \u4f20\u9012\u7684 *json* \u6570\u636e \ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46\n\n```javascript\nimport { fetchFn, useReactMutation } from '@kkt/request';\n\nuseReactMutation({ mutationKey: ['user'], url: '/api/login' });\nuseReactMutation({ mutationKey: ['user'], url: '/api/login', method: 'PUT' });\nuseReactMutation({ mutationKey: ['user', dataForm], url: '/api/login' });\nuseReactMutation({\n  mutationKey: ['user', dataForm], \n  mutationFn: () => fetchFn(`/api/login?id=${dataForm.userId}`, { method: 'PUT' })\n});\nuseReactMutation({\n  mutationKey: ['user', dataForm],\n  mutationFn: () => fetchFn('/api/login', { method: 'POST', body: JSON.stringify(dataForm) }),\n});\nuseReactMutation({\n  mutationKey: ['user', dataForm],\n  mutationFn: async () => {\n    return fetchFn(`/api/login?id=${dataForm.username}`, { method: 'DELETE', body: JSON.stringify(dataForm) });\n  },\n});\nuseReactMutation({\n  mutationKey: ['user', dataForm],\n  mutationFn: (data) => {\n    return fetchFn(`/api/login`, { method: 'POST', body: JSON.stringify(data) })\n  },\n});\n```\n\n**\u767b\u5f55\u9875\u9762**\u793a\u4f8b\n\n```javascript\nimport { useReactMutation, useAuth } from '@kkt/request';\nimport { useEffect, useState } from 'react';\nimport { Form, useNavigate, useLocation } from 'react-router-dom';\n\nexport default function LoginPage() {\n  const [errors, setErrors] = useState()\n  const [submitData, setSubmitData] = useState()\n  const location = useLocation();\n  const navigate = useNavigate();\n  const mutation = useReactMutation({\n    url: '/api/login',\n    mutationKey: ['user-login', submitData],\n  });\n\n  useEffect(() => {\n    sessionStorage.removeItem('token');\n    // \u9ed8\u8ba4\u8fdb\u5165\u767b\u5f55\u9875\u9762\u6e05\u7a7a token\uff0c\u9000\u51fa\u767b\u5f55\u5373\u53ef\u76f4\u63a5\u8df3\u8f6c\u5230 `/login` \u9875\u9762\n  }, []);\n\n  const submit = async (event) => {\n    event.preventDefault();\n    const result = await mutation.mutateAsync(submitData);\n    if (result.error) {\n      setErrors({ message: result.error });\n      return;\n    }\n    // \u5b58\u50a8 token\uff0c\u901a\u8fc7 sessionStorage \u6216\u8005 localStorage\n    sessionStorage.setItem('token', result.token);\n    setTimeout(() => {\n      // \u8df3\u8f6c\u5230\u4e0a\u4e00\u4e2a\u9875\u9762\u6216\u8005 `/`\n      const from = location.state?.from?.pathname || '/';\n      navigate(from, { replace: true });\n    });\n  };\n  const handleChange = (event) => {\n    const formData = new FormData(event.target.form);\n    const username = formData.get(\"username\");\n    const password = formData.get(\"password\");\n    const err = {};\n    // \u9a8c\u8bc1\u5b57\u6bb5\n    if (typeof username !== \"string\" || username.length < 3) {\n      err.username = \"\u7528\u6237\u540d\u5fc5\u987b\u5927\u4e8e 3 \u4e2a\u5b57\u7b26\";\n    }\n    if (typeof password !== \"string\" || password.length < 3) {\n      err.password = \"\u5bc6\u7801\u5fc5\u987b\u5927\u4e8e 3 \u4e2a\u5b57\u7b26\";\n    }\n    setErrors({ ...err });\n    if (!Object.entries(err).length) {\n      const data = Object.fromEntries(formData)\n      setSubmitData(data);\n    }\n  }\n  return (\n    <Form method=\"post\" onChange={handleChange} onSubmit={submit}>\n      <label>\n        <input type=\"text\" name=\"username\" />\n        {errors?.username && <span>{errors.username}</span>}\n      </label>\n      <label>\n        <input type=\"text\" name=\"password\" />\n        {errors?.password && <span>{errors.password}</span>}\n      </label>\n      <p>\n        <button type=\"submit\">Sign up</button>\n      </p>\n      {errors?.message && <div>{errors.message}</div>}\n    </Form>\n  );\n}\n```\n\n\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u523b\uff0c`mutation` \u53ea\u80fd\u5904\u4e8e\u4ee5\u4e0b\u72b6\u6001\u4e4b\u4e00\uff1a\n\n- `isIdle` or `status === 'idle'` - mutation \u5f53\u524d\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u6216\u5904\u4e8e\u65b0\u9c9c/\u91cd\u7f6e\u72b6\u6001\n- `isLoading` or `status === 'loading'` - mutation \u5f53\u524d\u6b63\u5728\u8fd0\u884c\n- `isError` or `status === 'error'` - mutation \u9047\u5230\u9519\u8bef\n- `isSuccess` or `status === 'success'` - mutation \u6210\u529f\u5e76\u4e14 mutation \u6570\u636e\u53ef\u7528\n\n\u9664\u4e86\u8fd9\u4e9b\u4e3b\u8981\u72b6\u6001\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e `mutation` \u72b6\u6001\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\uff1a\n\n- `error` - \u5982\u679c mutation \u5904\u4e8e\u9519\u8bef\u72b6\u6001\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 error \u5c5e\u6027\u83b7\u5f97\u9519\u8bef\u3002\n- `data` - \u5982\u679c mutation \u5904\u4e8e\u6210\u529f\u72b6\u6001\uff0c\u5219\u6570\u636e\u53ef\u901a\u8fc7 data \u5c5e\u6027\u83b7\u5f97\u3002\n\n```javascript\nconst mutation = useReactMutation({\n  url: '/api/login',\n  mutationKey: ['user-login', data],\n  method: 'PUT'\n});\n```\n\n#### \u526f\u4f5c\u7528 mutation \u9009\u9879\n\n```js\nconst mutation = useReactMutation({\n  url: '/api/login',\n  onMutate: (variables) => {\n    // mutation \u5373\u5c06\u53d1\u751f\uff01\n    \n    // \u53ef\u9009\u5730\u8fd4\u56de\u5305\u542b\u6570\u636e\u7684\u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\u5728\u56de\u6eda\u65f6\u4f7f\u7528\n    return { id: 1 }\n  },\n  onError: (error, variables, context) => {\n    // \u53d1\u751f\u9519\u8bef\uff01\n    console.log(`rolling back optimistic update with id ${context.id}`)\n  },\n  onSuccess: (data, variables, context) => {\n    // Boom baby!\n  },\n  onSettled: (data, error, variables, context) => {\n    // \u9519\u8bef\u6216\u6210\u529f......\u6ca1\u5173\u7cfb\uff01\n  },\n})\n```\n\n\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u5728\u8c03\u7528 `mutate` \u65f6\uff0c\u60a8\u60f3\u8981\u89e6\u53d1\u9664 `useReactMutation` \u4e0a\u5b9a\u4e49\u7684\u56de\u8c03\u4e4b\u5916\u7684\u5176\u4ed6\u56de\u8c03\u3002 \u8fd9\u53ef\u7528\u4e8e\u89e6\u53d1\u7ec4\u4ef6\u7279\u5b9a\u7684\u526f\u4f5c\u7528\u3002 \u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u5728 `mutate` \u53d8\u91cf\u4e4b\u540e\u5411 `mutate` \u51fd\u6570\u63d0\u4f9b\u4efb\u4f55\u76f8\u540c\u7684\u56de\u8c03\u9009\u9879\u3002 \u652f\u6301\u7684\u9009\u9879\u5305\u62ec\uff1a`onSuccess`\u3001`onError` \u548c `onSettled`\u3002 \u8bf7\u8bb0\u4f4f\uff0c\u5982\u679c\u60a8\u7684\u7ec4\u4ef6\u5728\u53d8\u66f4\u5b8c\u6210\u4e4b\u524d\u5378\u8f7d\uff0c\u90a3\u4e48\u8fd9\u4e9b\u989d\u5916\u7684\u56de\u8c03\u5c06\u4e0d\u4f1a\u8fd0\u884c\u3002\n\n```js\nmutation.mutate(todo, {\n  onSuccess: (data, variables, context) => {\n    // I will fire second!\n  },\n  onError: (error, variables, context) => {\n    // I will fire second!\n  },\n  onSettled: (data, error, variables, context) => {\n    // I will fire second!\n  },\n})\n```\n\n### Query Keys\n\nTanStack Query \u7684\u6838\u5fc3\u662f\u57fa\u4e8e\u67e5\u8be2\u952e\u4e3a\u60a8\u7ba1\u7406\u67e5\u8be2\u7f13\u5b58\u3002\u67e5\u8be2\u952e\u5fc5\u987b\u662f\u9876\u5c42\u7684\u6570\u7ec4\uff0c\u5e76\u4e14\u53ef\u4ee5\u50cf\u5177\u6709\u5355\u4e2a\u5b57\u7b26\u4e32\u7684\u6570\u7ec4\u4e00\u6837\u7b80\u5355\uff0c\u4e5f\u53ef\u4ee5\u50cf\u5305\u542b\u8bb8\u591a\u5b57\u7b26\u4e32\u548c\u5d4c\u5957\u5bf9\u8c61\u7684\u6570\u7ec4\u4e00\u6837\u590d\u6742\u3002 \u53ea\u8981\u67e5\u8be2\u952e\u662f\u53ef\u5e8f\u5217\u5316\u7684\uff0c\u5e76\u4e14\u5bf9\u4e8e\u67e5\u8be2\u6570\u636e\u662f\u552f\u4e00\u7684\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\uff01\n\n```js\nuseReactQuery({\n  url: `https://api.example.com/users?status=${status}&page=${page}`,\n  queryKey: ['use-list', { status, page }],\n});\n```\n\n### \u8bf7\u6c42\u91cd\u8bd5\n\n```js\nconst { isLoading, isError, data } = useReactQuery({\n  url: `/api/user/list?id=${userId}`,\n  queryKey: ['user-list', userId],\n  retry: 10, // \u5728\u663e\u793a\u9519\u8bef\u4e4b\u524d\u5c06\u91cd\u8bd5\u5931\u8d25\u7684\u8bf7\u6c42 10 \u6b21\n});\n```\n\n\n### \u83b7\u53d6\u5168\u5c40\u6ce8\u518c\u7684 QueryClient\n\n\u5168\u5c40 `QueryClient` \u662f\u9ed8\u8ba4\u96c6\u6210\u7684\uff0c\u5982\u679c\u6ca1\u6709\u4f7f\u7528 `reactQuery=false` \u53d6\u6d88\u6ce8\u518c\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u65b9\u5f0f\u83b7\u53d6\u5168\u5c40 `queryClient` \u5bf9\u8c61\n\n```javascript\nimport { queryClient, fetchFn } from '@kkt/request';\n// Or\nimport { queryClient, fetchFn } from '@kkt/pro';\n\n/** @type {import(\"@kkt/request\").QueryClient} */\nconst client = queryClient;\n```\n\n\n## \u6bd4\u8f83 | React Query vs SWR vs Apollo vs RTK Query vs React Router\n\n|   | React Query | SWR [_(Website)_][swr] | Apollo Client [_(Website)_][apollo] | RTK-Query [_(Website)_][rtk-query]   | React Router [_(Website)_][react-router] |\n| ----- | ----- | ----- | ----- | ----- | ----- |\n| Github Repo / Stars                                | [![][stars-react-query]][gh-react-query] | [![][stars-swr]][gh-swr]    | [![][stars-apollo]][gh-apollo]             | [![][stars-rtk-query]][gh-rtk-query] | [![][stars-react-router]][gh-react-router]                                |\n| \u5e73\u53f0\u8981\u6c42 | React | React | React, GraphQL | Redux | React |\n| \u4ed6\u4eec\u7684\u6bd4\u8f83 | | (none) | (none) | [Comparison][rtk-query-comparison]   | [Comparison][react-router-comparison] |\n| \u652f\u6301\u7684\u67e5\u8be2\u8bed\u6cd5 | Promise, REST, GraphQL | Promise, REST, GraphQL | GraphQL, Any (Reactive Variables) | Promise, REST, GraphQL | Promise, REST, GraphQL |\n| \u652f\u6301\u7684\u6846\u67b6 | React | React | React + Others | Any | React |\n| \u7f13\u5b58\u7b56\u7565 | Hierarchical Key -> Value | Unique Key -> Value | Normalized Schema | Unique Key -> Value | Nested Route -> value |\n| \u7f13\u5b58\u952e\u7b56\u7565 | JSON | JSON | GraphQL Query | JSON | Route Path |\n| \u7f13\u5b58\u53d8\u5316\u68c0\u6d4b | Deep Compare Keys (Stable Serialization) | Shallow Compare Keys | Deep Compare Keys (Unstable Serialization) | Key Referential Equality (===) | Route Change |\n| \u6570\u636e\u53d8\u5316\u68c0\u6d4b | Deep Comparison + Structural Sharing | Deep Compare (via `dequal`) | Deep Compare (Unstable Serialization) | Key Referential Equality (===) | Loader Run |\n| \u6570\u636e\u8bb0\u5fc6 | Full Structural Sharing | Identity (===) | Normalized Identity | Identity (===) | Identity (===) |\n| \u6346\u7ed1\u5c3a\u5bf8 | [![][bp-react-query]][bpl-react-query]   | [![][bp-swr]][bpl-swr]      | [![][bp-apollo]][bpl-apollo]               | [![][bp-rtk-query]][bpl-rtk-query]   | [![][bp-react-router]][bpl-react-router]  [![][bp-history]][bpl-history] |\n| API\u5b9a\u4e49\u4f4d\u7f6e | Component, External Config | Component | GraphQL Schema | External Config | Route Tree Configuration |\n| \u67e5\u8be2 | \u2705 | \u2705 | \u2705 | \u2705 | \u2705 |\n| \u7f13\u5b58\u6301\u4e45\u5316 | \u2705 | \u2705 | \u2705 | \u2705 | \ud83d\uded1 Active Routes Only <sup>8</sup> |\n| \u5f00\u53d1\u8005\u5de5\u5177 | \u2705 | \ud83d\udfe1 | \u2705 | \u2705 | \ud83d\uded1 |\n| \u8f6e\u8be2/\u95f4\u9694 | \u2705 | \u2705 | \u2705 | \u2705 | \ud83d\uded1 |\n| \u5e76\u884c\u67e5\u8be2 | \u2705 | \u2705 | \u2705 | \u2705 | \u2705 |\n| \u4f9d\u8d56\u67e5\u8be2  | \u2705 | \u2705 | \u2705 | \u2705 | \u2705 |\n| \u5206\u9875\u67e5\u8be2  | \u2705 | \u2705 | \u2705 | \u2705 | \u2705 |\n| \u65e0\u9650\u67e5\u8be2 | \u2705 | \u2705 | \u2705 | \ud83d\uded1 | \ud83d\uded1 |\n| \u53cc\u5411\u65e0\u9650\u67e5\u8be2 | \u2705 | \ud83d\udd36 | \ud83d\udd36 | \ud83d\uded1 | \ud83d\uded1 |\n| \u65e0\u9650\u67e5\u8be2\u91cd\u65b0\u83b7\u53d6 | \u2705 | \u2705 | \ud83d\uded1 | \ud83d\uded1 | \ud83d\uded1 |\n| \u6ede\u540e\u67e5\u8be2\u6570\u636e[^1] | \u2705 | \ud83d\udd36 | \ud83d\uded1 | \u2705 | \u2705 |\n| \u9009\u62e9\u5668 | \u2705 | \ud83d\uded1 | \u2705 | \u2705 | N/A |\n| \u521d\u59cb\u6570\u636e | \u2705 | \u2705 | \u2705 | \u2705 | \u2705 |\n| \u6eda\u52a8\u6062\u590d | \u2705 | \u2705 | \u2705 | \u2705 | \u2705 |\n| \u7f13\u5b58\u64cd\u4f5c | \u2705 | \u2705 | \u2705 | \u2705 | \ud83d\uded1 |\n| \u8fc7\u65f6\u7684\u67e5\u8be2\u9a73\u56de | \u2705 | \u2705 | \u2705 | \u2705 | \u2705 |\n| \u6e32\u67d3\u6279\u5904\u7406\u548c\u4f18\u5316[^2] | \u2705 | \ud83d\uded1 | \ud83d\uded1 | \u2705 | \u2705 |\n| \u81ea\u52a8\u5783\u573e\u6536\u96c6 | \u2705 | \ud83d\uded1 | \ud83d\uded1 | \u2705 | N/A |\n| mutation \u94a9\u5b50 | \u2705 | \ud83d\udfe1 | \u2705 | \u2705 | \u2705 |\n| \u79bb\u7ebf\u7a81\u53d8\u652f\u6301 | \u2705 | \ud83d\uded1 | \ud83d\udfe1 | \ud83d\uded1 | \ud83d\uded1 |\n| \u9884\u53d6 API | \u2705 | \ud83d\udd36 | \u2705 | \u2705 | \u2705 |\n| \u67e5\u8be2\u53d6\u6d88 | \u2705 | \ud83d\uded1 | \ud83d\uded1 | \ud83d\uded1 | \u2705 |\n| \u90e8\u5206\u67e5\u8be2\u5339\u914d[^3] | \u2705 | \ud83d\uded1 | \ud83d\uded1 | \u2705 | N/A |\n| \u91cd\u65b0\u9a8c\u8bc1\u65f6\u9648\u65e7 |\u2705 | \u2705 | \u2705 | \u2705 | \ud83d\uded1 |\n| \u9648\u65e7\u65f6\u95f4\u914d\u7f6e | \u2705 | \ud83d\uded1[^7] | \ud83d\uded1 | \u2705 | \ud83d\uded1 |\n| \u4f7f\u7528\u524d\u67e5\u8be2/\u53d8\u66f4\u914d\u7f6e[^4] | \u2705 | \ud83d\uded1 | \ud83d\uded1 | \u2705 | \u2705 |\n| \u7a97\u53e3\u7126\u70b9\u91cd\u65b0\u83b7\u53d6 | \u2705 | \u2705 | \ud83d\uded1 | \ud83d\udd36 | \ud83d\uded1 |\n| \u7f51\u7edc\u72b6\u6001\u91cd\u65b0\u83b7\u53d6 | \u2705 | \u2705 | \u2705 | \ud83d\udd36 | \ud83d\uded1 |\n| \u4e00\u822c\u7f13\u5b58\u8131\u6c34/\u518d\u6c34\u5316 | \u2705 | \ud83d\uded1 | \u2705 | \u2705 | \u2705 |\n| \u79bb\u7ebf\u7f13\u5b58 | \u2705 (\u5b9e\u9a8c\u6027\u7684) | \ud83d\uded1 | \u2705 | \ud83d\udd36 | \ud83d\uded1 |\n| React Suspense(\u5b9e\u9a8c\u6027\u7684) | \u2705 | \u2705 | \ud83d\uded1 | \ud83d\uded1 | \u2705 |\n| \u62bd\u8c61/\u4e0d\u53ef\u77e5\u6838\u5fc3 | \u2705 | \ud83d\uded1 | \u2705 | \u2705 | \ud83d\uded1 |\n| \u53d8\u5f02\u540e\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6[^5] | \ud83d\udd36 | \ud83d\udd36 | \u2705 | \u2705 | \u2705 |\n| \u6807\u51c6\u5316\u7f13\u5b58[^6] | \ud83d\uded1 | \ud83d\uded1 | \u2705 | \ud83d\uded1 | \ud83d\uded1 |\n\n[bpl-react-query]: https://bundlephobia.com/result?p=react-query\n[bp-react-query]: https://badgen.net/bundlephobia/minzip/react-query?label=\ud83d\udcbe\n[gh-react-query]: https://github.com/tannerlinsley/react-query\n[stars-react-query]: https://img.shields.io/github/stars/tannerlinsley/react-query?label=%F0%9F%8C%9F\n\n[swr]: https://github.com/vercel/swr\n[bp-swr]: https://badgen.net/bundlephobia/minzip/swr?label=\ud83d\udcbe\n[gh-swr]: https://github.com/vercel/swr\n[stars-swr]: https://img.shields.io/github/stars/vercel/swr?label=%F0%9F%8C%9F\n[bpl-swr]: https://bundlephobia.com/result?p=swr\n\n[apollo]: https://github.com/apollographql/apollo-client\n[bp-apollo]: https://badgen.net/bundlephobia/minzip/@apollo/client?label=\ud83d\udcbe\n[gh-apollo]: https://github.com/apollographql/apollo-client\n[stars-apollo]: https://img.shields.io/github/stars/apollographql/apollo-client?label=%F0%9F%8C%9F\n[bpl-apollo]: https://bundlephobia.com/result?p=@apollo/client\n\n[rtk-query]: https://redux-toolkit.js.org/rtk-query/overview\n[rtk-query-comparison]: https://redux-toolkit.js.org/rtk-query/comparison\n[rtk-query-bundle-size]: https://redux-toolkit.js.org/rtk-query/comparison#bundle-size\n[bp-rtk]: https://badgen.net/bundlephobia/minzip/@reduxjs/toolkit?label=\ud83d\udcbe\n[bp-rtk-query]: https://badgen.net/bundlephobia/minzip/@reduxjs/toolkit?label=\ud83d\udcbe\n[gh-rtk-query]: https://github.com/reduxjs/redux-toolkit\n[stars-rtk-query]: https://img.shields.io/github/stars/reduxjs/redux-toolkit?label=\ud83c\udf1f\n[bpl-rtk]: https://bundlephobia.com/result?p=@reduxjs/toolkit\n[bpl-rtk-query]: https://bundlephobia.com/package/@reduxjs/toolkit\n\n[react-router]: https://github.com/remix-run/react-router\n[bp-react-router]: https://badgen.net/bundlephobia/minzip/react-router-dom?label=\ud83d\udcbe\n[gh-react-router]: https://github.com/remix-run/react-router\n[stars-react-router]: https://img.shields.io/github/stars/remix-run/react-router?label=%F0%9F%8C%9F\n[bpl-react-router]: https://bundlephobia.com/result?p=react-router-dom\n[bp-history]: https://badgen.net/bundlephobia/minzip/history?label=\ud83d\udcbe\n[bpl-history]: https://bundlephobia.com/result?p=history\n\n[^1]: \u6ede\u540e\u67e5\u8be2\u6570\u636e \u2014 React Query \u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u67e5\u8be2\u65f6\u7ee7\u7eed\u67e5\u770b\u73b0\u6709\u67e5\u8be2\u6570\u636e\u7684\u65b9\u6cd5\uff08\u7c7b\u4f3c\u4e8e suspense \u5f88\u5feb\u5c06\u5728\u672c\u5730\u63d0\u4f9b\u7684\u76f8\u540c UX\uff09\u3002 \u8fd9\u5728\u7f16\u5199\u5206\u9875 UI \u6216\u65e0\u9650\u52a0\u8f7d UI \u65f6\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u60a8\u4e0d\u5e0c\u671b\u5728\u8bf7\u6c42\u65b0\u67e5\u8be2\u65f6\u663e\u793a\u786c\u52a0\u8f7d\u72b6\u6001\u3002 \u5176\u4ed6\u5e93\u6ca1\u6709\u6b64\u529f\u80fd\uff0c\u5e76\u5728\u65b0\u67e5\u8be2\u52a0\u8f7d\u65f6\u4e3a\u65b0\u67e5\u8be2\u5448\u73b0\u786c\u52a0\u8f7d\u72b6\u6001\uff08\u9664\u975e\u5b83\u5df2\u88ab\u9884\u53d6\uff09\u3002\n[^2]: \u6e32\u67d3\u4f18\u5316 - React Query \u5177\u6709\u51fa\u8272\u7684\u6e32\u67d3\u6027\u80fd\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u81ea\u52a8\u8ddf\u8e2a\u8bbf\u95ee\u4e86\u54ea\u4e9b\u5b57\u6bb5\uff0c\u5e76\u4e14\u4ec5\u5728\u5176\u4e2d\u4e00\u4e2a\u5b57\u6bb5\u53d1\u751f\u66f4\u6539\u65f6\u624d\u91cd\u65b0\u5448\u73b0\u3002 \u5982\u679c\u60a8\u60f3\u9009\u62e9\u9000\u51fa\u6b64\u4f18\u5316\uff0c\u5c06 notifyOnChangeProps \u8bbe\u7f6e\u4e3a 'all' \u5c06\u5728\u66f4\u65b0\u67e5\u8be2\u65f6\u91cd\u65b0\u5448\u73b0\u60a8\u7684\u7ec4\u4ef6\u3002 \u4f8b\u5982\u56e0\u4e3a\u5b83\u6709\u65b0\u6570\u636e\uff0c\u6216\u8005\u8868\u660e\u5b83\u6b63\u5728\u83b7\u53d6\u3002 React Query \u8fd8\u5c06\u6279\u5904\u7406\u66f4\u65b0\u653e\u5728\u4e00\u8d77\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ec5\u5728\u591a\u4e2a\u7ec4\u4ef6\u4f7f\u7528\u76f8\u540c\u67e5\u8be2\u65f6\u91cd\u65b0\u5448\u73b0\u4e00\u6b21\u3002 \u5982\u679c\u60a8\u53ea\u5bf9\u6570\u636e\u6216\u9519\u8bef\u5c5e\u6027\u611f\u5174\u8da3\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5c06 notifyOnChangeProps \u8bbe\u7f6e\u4e3a ['data', 'error'] \u6765\u8fdb\u4e00\u6b65\u51cf\u5c11\u6e32\u67d3\u6b21\u6570\u3002\n[^3]: \u90e8\u5206\u67e5\u8be2\u5339\u914d \u2014 \u56e0\u4e3a React Query \u4f7f\u7528\u786e\u5b9a\u6027\u67e5\u8be2\u952e\u5e8f\u5217\u5316\uff0c\u8fd9\u5141\u8bb8\u60a8\u64cd\u4f5c\u53ef\u53d8\u7684\u67e5\u8be2\u7ec4\uff0c\u800c\u4e0d\u5fc5\u77e5\u9053\u60a8\u60f3\u8981\u5339\u914d\u7684\u6bcf\u4e2a\u5355\u72ec\u7684\u67e5\u8be2\u952e\uff0c\u4f8b\u5982\u3002 \u60a8\u53ef\u4ee5\u91cd\u65b0\u83b7\u53d6\u5176\u952e\u4e2d\u4ee5 todos \u5f00\u5934\u7684\u6bcf\u4e2a\u67e5\u8be2\uff0c\u800c\u4e0d\u7ba1\u53d8\u91cf\u5982\u4f55\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u4f7f\u7528\uff08\u6216\u4e0d\u4f7f\u7528\uff09\u53d8\u91cf\u6216\u5d4c\u5957\u5c5e\u6027\u6765\u5b9a\u4f4d\u7279\u5b9a\u67e5\u8be2\uff0c\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u8fc7\u6ee4\u5668\u51fd\u6570\u6765\u4ec5\u5339\u914d\u901a\u8fc7\u7279\u5b9a\u6761\u4ef6\u7684\u67e5\u8be2\u3002\n[^4]: \u4f7f\u7528\u524d\u67e5\u8be2\u914d\u7f6e - \u8fd9\u53ea\u662f\u4e00\u4e2a\u5947\u7279\u7684\u540d\u79f0\uff0c\u7528\u4e8e\u914d\u7f6e\u67e5\u8be2\u548c\u53d8\u66f4\u5728\u4f7f\u7528\u524d\u7684\u884c\u4e3a\u65b9\u5f0f\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a\u67e5\u8be2\u53ef\u4ee5\u9884\u5148\u5b8c\u5168\u914d\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5f53\u9700\u8981\u4f7f\u7528\u5b83\u65f6\uff0c\u53ea\u9700\u8981 `useQuery({ queryKey })` \uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u4f7f\u7528\u90fd\u9700\u8981\u4f20\u9012 fetcher \u548c/\u6216\u9009\u9879\u3002 SWR \u786e\u5b9e\u5177\u6709\u6b64\u529f\u80fd\u7684\u90e8\u5206\u5f62\u5f0f\uff0c\u5b83\u5141\u8bb8\u60a8\u9884\u5148\u914d\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u7684\u63d0\u53d6\u5668\uff0c\u4f46\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5168\u5c40\u63d0\u53d6\u5668\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u6bcf\u4e2a\u67e5\u8be2\uff0c\u800c\u4e14\u7edd\u5bf9\u4e0d\u662f\u7528\u4e8e\u7a81\u53d8\u3002\n[^5]: \u7a81\u53d8\u540e\u81ea\u52a8\u91cd\u65b0\u63d0\u53d6 - \u4e3a\u4e86\u5728\u7a81\u53d8\u53d1\u751f\u540e\u53d1\u751f\u771f\u6b63\u7684\u81ea\u52a8\u91cd\u65b0\u63d0\u53d6\uff0c\u9700\u8981\u4e00\u4e2a\u6a21\u5f0f\uff08\u5c31\u50cf graphQL \u63d0\u4f9b\u7684\u90a3\u6837\uff09\u4ee5\u53ca\u5e2e\u52a9\u5e93\u77e5\u9053\u5982\u4f55\u8bc6\u522b\u8be5\u6a21\u5f0f\u4e2d\u7684\u5355\u4e2a\u5b9e\u4f53\u548c\u5b9e\u4f53\u7c7b\u578b\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\n[^6]: \u89c4\u8303\u5316\u7f13\u5b58 \u2014 React Query\u3001SWR \u548c RTK-Query \u76ee\u524d\u4e0d\u652f\u6301\u81ea\u52a8\u89c4\u8303\u5316\u7f13\u5b58\uff0c\u5b83\u63cf\u8ff0\u4e86\u5728\u5e73\u9762\u67b6\u6784\u4e2d\u5b58\u50a8\u5b9e\u4f53\u4ee5\u907f\u514d\u4e00\u4e9b\u9ad8\u7ea7\u6570\u636e\u91cd\u590d\u3002\n[^7]: SWR \u7684\u4e0d\u53ef\u53d8\u6a21\u5f0f \u2014 SWR \u9644\u5e26\u4e00\u4e2a\u201c\u4e0d\u53ef\u53d8\u201d\u6a21\u5f0f\uff0c\u5141\u8bb8\u60a8\u5728\u7f13\u5b58\u7684\u751f\u547d\u5468\u671f\u5185\u53ea\u83b7\u53d6\u4e00\u6b21\u67e5\u8be2\uff0c\u4f46\u5b83\u4ecd\u7136\u6ca1\u6709\u8fc7\u65f6\u6216\u6761\u4ef6\u81ea\u52a8\u91cd\u65b0\u9a8c\u8bc1\u7684\u6982\u5ff5\n[^8]: React Router \u7f13\u5b58\u6301\u4e45\u6027 - React Router \u4e0d\u4f1a\u7f13\u5b58\u8d85\u51fa\u5f53\u524d\u5339\u914d\u8def\u7531\u7684\u6570\u636e\u3002 \u5982\u679c\u7559\u4e0b\u4e00\u6761\u8def\u7ebf\uff0c\u5176\u6570\u636e\u5c06\u4e22\u5931\u3002\n"}}}]);
//# sourceMappingURL=496.e65dcb74.chunk.js.map