{"version":3,"file":"static/js/581.3b6e723a.chunk.js","mappings":"+GACA,WACIA,WAAY,CAAG,EACfC,KAAM,CAAC,EACPC,OAAQ,2yI","sources":["../../packages/plugin/router/README.md"],"sourcesContent":["\nexport default {\n    components: {  },\n    data: {},\n    source: \"## 路由配置\\n\\n`kktp`内置插件，用于自动进行生成路由配置。使用此插件需要安装`react-router`和`react-router-dom`依赖包\\n\\n## 参数\\n\\n```ts\\nexport interface RouterPluginProps {\\n  /**处理图标菜单中图标引入问题*/\\n  analysisRoutersIcon?: (icons: { name: string; newName: string }[]) => string;\\n  /**\\n   * @description 在src目录下生成的临时文件夹名称\\n   * @default .kktp\\n   * */\\n  cacheDirName?: string;\\n  /**\\n   * @description 路由类型\\n   * @default \\\"hash\\\"\\n   */\\n  routesType?: 'browser' | 'hash' | 'memory';\\n  /** 路由权限名称，默认查找src目录下access.[js | ts]文件 */\\n  accessDirName?: string;\\n  /**页面加载loading组件地址*/\\n  fallbackElement?: string;\\n  /**路由外层包裹组件，可以用于自定义添加路由**/\\n  routesOutletElement?: string;\\n  /**自动生成路由配置*/\\n  autoRoutes?: boolean;\\n  /**自动生成路由layout布局组件地址*/\\n  outletLayout?: string;\\n}\\n```\\n\\n## 路由生成方式\\n\\n**1. 通过配置进行生成路由**\\n\\n- 约定根目录下`config/routes.(json|js|ts)`为[路由菜单配置](https://github.com/kktjs/kkt-pro/tree/dev/packages/plugin/pro#kktproroutesprops)\\n\\n\\n\\n**2. 自动生成路由**\\n\\n- 约定`src/pages`文件夹为根据生成路由\\n- 约定`src/pages/index.(js|jsx|tsx)`文件为默认路由\\n- 约定`src/pages/**/index.(js|jsx|tsx)`文件为对应路由展示页面\\n\\n## 页面参数\\n\\n在`kktp`中，页面内置了`roles`、`navigate`、`routes`。\\n\\n- `roles` 页面权限，`config/routes.json`菜单上配置了 `roles`，则在页面上获取。\\n\\n- `navigate` 跳转。\\n\\n- `routes` 路由`path=\\\"/\\\"`路由下的子集路由集合。\\n\\n```tsx\\nimport { KktproPageProps } from '@kkt/pro';\\n\\nconst Page = (props: KktproPageProps) => {\\n  const { navigate, roles = [], routes = [] } = props;\\n\\n  return <div />\\n};\\nexport default Page;\\n```\\n\\n## 页面跳转\\n\\n页面中可直接通过 `navigate` 跳转， 或者通过`react-router-dom`提供的 `useNavigate`来跳转。\\n\\n```tsx\\nimport { KktproPageProps, useNavigate } from '@kkt/pro';\\n\\nconst Page = (props: KktproPageProps) => {\\n  const { navigate } = props;\\n  // const navigate = useNavigate();\\n\\n  const click = () => {\\n    navigate('/demo');\\n  };\\n\\n  return <button onClick={click}>navigate</button>\\n};\\nexport default Page;\\n```\\n\\n## 支持页面导出`react-router 6`配置参数\\n\\n```tsx\\n// 路由加载文件 src/pages/about/index.tsx\\nconst Index = ()=>{\\n  return <div>导出element</div>\\n}\\nexport default Index;\\nexport const element = <Index />;\\nexport const loader = ()=>{}\\nexport const action = ()=>{}\\nconst ErrorElement = ()=><div>errorElement</div>\\nexport const errorElement =<ErrorElement />\\nexport const lazy=()=>import(\\\"@/about\\\")\\nexport const path=\\\"/about\\\"\\nexport const shouldRevalidate=({ currentUrl }) => {\\n  // only revalidate if the submission originates from\\n  // the `/meal-plans/new` route.\\n  return currentUrl.pathname === \\\"/meal-plans/new\\\";\\n}\\n\\n```\\n\\n## `kktp`配置文件\\n\\n```ts\\n// .kktprc.ts\\nexport default {\\n  // ...\\n  initRoutes:{\\n    outletLayout:\\\"@/layout\\\" // 自动生成路由layout布局组件地址\\n  },\\n}\\n```\\n\\n### Contributors\\n\\n<a href=\\\"https://github.com/kktjs/kkt-pro/graphs/contributors\\\">\\n  <img src=\\\"https://kktjs.github.io/kkt-pro/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n### License\\n\\nLicensed under the MIT License.\"\n  }"],"names":["components","data","source"],"sourceRoot":""}