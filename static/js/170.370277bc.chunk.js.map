{"version":3,"file":"static/js/170.370277bc.chunk.js","mappings":"8GACA,WACIA,WAAY,CAAG,EACfC,KAAM,CAAC,EACPC,OAAQ,orI","sources":["../../packages/plugin/config/README.md"],"sourcesContent":["\nexport default {\n    components: {  },\n    data: {},\n    source: \"配置 .kktprc\\n====\\n\\n`kktp`内置配置处理包，配置约定在根目录，命名为 `.kktprc.[ts|js]`。\\n\\n## 参数\\n\\n```ts\\nimport webpack from 'webpack';\\nimport { LoaderConfOptions, WebpackConfiguration } from 'kkt';\\nimport { RouterPluginProps } from '@kkt/plugin-pro-router';\\nimport type { BundleAnalyzerPlugin } from 'webpack-bundle-analyzer';\\n\\nexport type DefaultDefineType = {};\\n\\nexport type OverrideWebpackType = (\\n  conf: WebpackConfiguration,\\n  env: 'development' | 'production',\\n  options?: LoaderConfOptions | undefined,\\n) => WebpackConfiguration;\\n\\nexport type PluginsType = (\\n  | ((this: webpack.Compiler, compiler: webpack.Compiler) => void)\\n  | webpack.WebpackPluginInstance\\n  | [string, Record<string, any>]\\n  | string\\n)[];\\n\\nexport type KKTPlugins = (\\n  | OverrideWebpackType\\n  | {\\n      loader?: OverrideWebpackType;\\n      options?: LoaderConfOptions | undefined | Record<string, any>;\\n    }\\n  | string\\n  | [string, Record<string, any>]\\n)[];\\n\\nexport type KKTPAnalyze = BundleAnalyzerPlugin['opts'];\\n\\nexport interface OverrideKKTPConfigProps extends Omit<WebpackConfiguration, 'plugins'> {\\n  /**\\n   * 别名\\n   * 默认系统内置两个别名\\n   * 1. `@` 指向 src 目录\\n   * 2. `@@` 指向 src/.kktp 目录\\n   */\\n  alias?: Record<string, string | false | string[]>;\\n  /** 插件 */\\n  plugins?: PluginsType;\\n  /** 默认全局变量 define ， 注意：对象的属性值会经过一次 JSON.stringify 转换   */\\n  define?: Record<string, any> & DefaultDefineType;\\n  /** kkt plugin  */\\n  kktPlugins?: KKTPlugins;\\n  /** 项目前缀 */\\n  publicPath?: string;\\n  /** 提供回调函数，更改 webpack 的最终配置。 */\\n  overrideWebpack?: OverrideWebpackType;\\n  /** 输出 */\\n  output?: Omit<WebpackConfiguration['output'], 'publicPath'>;\\n  /**自动生成文件目录名称**/\\n  cacheDirName?: string;\\n  /**自动生成入口文件*/\\n  initEntery?: boolean;\\n  /**路由配置*/\\n  initRoutes?: RouterPluginProps | boolean;\\n  /**\\n   * 1. 自动生成models集合配置文件\\n   * 2. 当传递的是字符串的时候，用于自己定义状态管理的引用地址\\n   */\\n  initModel?: boolean | string;\\n  /** 是否开启权限 */\\n  access?: boolean;\\n  /** 分析产物构成 */\\n  analyze?: KKTPAnalyze;\\n}\\n\\n\\n```\\n\\n## 配置文件\\n\\n```ts\\n// .kktprc.ts\\nexport default {\\n  // ...\\n  alias:{\\n    \\\"react-native\\\":\\\"react-native-web\\\",\\n  },\\n  define:{\\n    \\\"BAST\\\":\\\"111\\\",\\n    \\\"TEST\\\":\\\"222\\\"\\n  }\\n  initEntery:true,\\n  initRoutes:true,\\n}\\n```\\n\\n**plugins使用**\\n\\n```ts\\n// .kktprc.ts\\nexport default {\\n  // ...\\n  plugins:[\\\"@kkt/plugin-pro-router\\\"]\\n  // plugins:[[\\\"@kkt/plugin-pro-router\\\",{ autoRoutes:true, }]]  \\n}\\n```\\n\\n**analyze 使用**\\n\\n用于分析 bundle 构成。通过配置`--analyzer=1`生效。可以通过`analyze`选项自定义配置。`analyze` 插件的具体配置项，见 [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer)\\n\\n```ts\\n// package.json\\n\\\"scripts\\\": {\\n  \\\"start\\\": \\\"kktp start --analyzer=1\\\",\\n  \\\"build\\\": \\\"kktp build --analyzer=1\\\"\\n},\\n\\n// .kktprc.ts\\nexport default {\\n  // ...\\n  analyzer: {\\n    analyzerPort: 9999 // 自定义端口\\n  }\\n}\\n```\\n**overrideWebpack 使用**\\n\\n```ts\\n// .kktprc.ts\\nexport default {\\n  // ...\\n  overrideWebpack:(conf, env, options)=>{\\n    // 处理 conf\\n    return conf;\\n  }\\n}\\n```\\n\\n### Contributors\\n\\n<a href=\\\"https://github.com/kktjs/kkt-pro/graphs/contributors\\\">\\n  <img src=\\\"https://kktjs.github.io/kkt-pro/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n### License\\n\\nLicensed under the MIT License.\"\n  }"],"names":["components","data","source"],"sourceRoot":""}